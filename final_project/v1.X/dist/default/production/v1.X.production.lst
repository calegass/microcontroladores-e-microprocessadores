

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Sep 23 22:12:54 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og9 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27     0000                     
    28                           ; Generated 05/01/2024 GMT
    29                           ; 
    30                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F877A Definitions
    60                           ; 
    61                           ; SFR Addresses
    62     0000                     	;# 
    63     0001                     	;# 
    64     0002                     	;# 
    65     0003                     	;# 
    66     0004                     	;# 
    67     0005                     	;# 
    68     0006                     	;# 
    69     0007                     	;# 
    70     0008                     	;# 
    71     0009                     	;# 
    72     000A                     	;# 
    73     000B                     	;# 
    74     000C                     	;# 
    75     000D                     	;# 
    76     000E                     	;# 
    77     000E                     	;# 
    78     000F                     	;# 
    79     0010                     	;# 
    80     0011                     	;# 
    81     0012                     	;# 
    82     0013                     	;# 
    83     0014                     	;# 
    84     0015                     	;# 
    85     0015                     	;# 
    86     0016                     	;# 
    87     0017                     	;# 
    88     0018                     	;# 
    89     0019                     	;# 
    90     001A                     	;# 
    91     001B                     	;# 
    92     001B                     	;# 
    93     001C                     	;# 
    94     001D                     	;# 
    95     001E                     	;# 
    96     001F                     	;# 
    97     0081                     	;# 
    98     0085                     	;# 
    99     0086                     	;# 
   100     0087                     	;# 
   101     0088                     	;# 
   102     0089                     	;# 
   103     008C                     	;# 
   104     008D                     	;# 
   105     008E                     	;# 
   106     0091                     	;# 
   107     0092                     	;# 
   108     0093                     	;# 
   109     0094                     	;# 
   110     0098                     	;# 
   111     0099                     	;# 
   112     009C                     	;# 
   113     009D                     	;# 
   114     009E                     	;# 
   115     009F                     	;# 
   116     010C                     	;# 
   117     010D                     	;# 
   118     010E                     	;# 
   119     010F                     	;# 
   120     018C                     	;# 
   121     018D                     	;# 
   122     0000                     	;# 
   123     0001                     	;# 
   124     0002                     	;# 
   125     0003                     	;# 
   126     0004                     	;# 
   127     0005                     	;# 
   128     0006                     	;# 
   129     0007                     	;# 
   130     0008                     	;# 
   131     0009                     	;# 
   132     000A                     	;# 
   133     000B                     	;# 
   134     000C                     	;# 
   135     000D                     	;# 
   136     000E                     	;# 
   137     000E                     	;# 
   138     000F                     	;# 
   139     0010                     	;# 
   140     0011                     	;# 
   141     0012                     	;# 
   142     0013                     	;# 
   143     0014                     	;# 
   144     0015                     	;# 
   145     0015                     	;# 
   146     0016                     	;# 
   147     0017                     	;# 
   148     0018                     	;# 
   149     0019                     	;# 
   150     001A                     	;# 
   151     001B                     	;# 
   152     001B                     	;# 
   153     001C                     	;# 
   154     001D                     	;# 
   155     001E                     	;# 
   156     001F                     	;# 
   157     0081                     	;# 
   158     0085                     	;# 
   159     0086                     	;# 
   160     0087                     	;# 
   161     0088                     	;# 
   162     0089                     	;# 
   163     008C                     	;# 
   164     008D                     	;# 
   165     008E                     	;# 
   166     0091                     	;# 
   167     0092                     	;# 
   168     0093                     	;# 
   169     0094                     	;# 
   170     0098                     	;# 
   171     0099                     	;# 
   172     009C                     	;# 
   173     009D                     	;# 
   174     009E                     	;# 
   175     009F                     	;# 
   176     010C                     	;# 
   177     010D                     	;# 
   178     010E                     	;# 
   179     010F                     	;# 
   180     018C                     	;# 
   181     018D                     	;# 
   182                           
   183                           	psect	idataCOMMON
   184     0450                     __pidataCOMMON:
   185                           
   186                           ;initializer for _display_state
   187     0450  3401               	retlw	1
   188                           
   189                           	psect	idataBANK0
   190     0431                     __pidataBANK0:
   191                           
   192                           ;initializer for _keypad
   193     0431  3431               	retlw	49
   194     0432  3432               	retlw	50
   195     0433  3433               	retlw	51
   196     0434  3434               	retlw	52
   197     0435  3435               	retlw	53
   198     0436  3436               	retlw	54
   199     0437  3437               	retlw	55
   200     0438  3438               	retlw	56
   201     0439  3439               	retlw	57
   202     043A  342A               	retlw	42
   203     043B  3430               	retlw	48
   204     043C  3423               	retlw	35
   205     0005                     _PORTAbits	set	5
   206     0001                     _TMR0	set	1
   207     0008                     _PORTD	set	8
   208     0007                     _PORTC	set	7
   209     0006                     _PORTB	set	6
   210     005E                     _PEIE	set	94
   211     005F                     _GIE	set	95
   212     0033                     _RB3	set	51
   213     0032                     _RB2	set	50
   214     0031                     _RB1	set	49
   215     0030                     _RB0	set	48
   216     0036                     _RB6	set	54
   217     0035                     _RB5	set	53
   218     0034                     _RB4	set	52
   219     005D                     _T0IE	set	93
   220     005A                     _T0IF	set	90
   221     0081                     _OPTION_REG	set	129
   222     0086                     _TRISB	set	134
   223     0088                     _TRISD	set	136
   224     0087                     _TRISC	set	135
   225     0085                     _TRISA	set	133
   226                           
   227                           	psect	cinit
   228     0011                     start_initialization:	
   229                           ; #config settings
   230                           
   231     0011                     __initialization:
   232                           
   233                           ; Initialize objects allocated to BANK0
   234     0011  1383               	bcf	3,7	;select IRP bank0
   235     0012  3043               	movlw	low (__pdataBANK0+12)
   236     0013  00FD               	movwf	btemp+-1
   237     0014  3004               	movlw	high __pidataBANK0
   238     0015  00FE               	movwf	btemp
   239     0016  3031               	movlw	low __pidataBANK0
   240     0017  00FF               	movwf	btemp+1
   241     0018  3037               	movlw	low __pdataBANK0
   242     0019  0084               	movwf	4
   243     001A  120A  118A  2413  120A  118A  	fcall	init_ram0
   244                           
   245                           ; Initialize objects allocated to COMMON
   246     001F  120A  118A  2450   	fcall	__pidataCOMMON	;fetch initializer
   247     0022  00F9               	movwf	__pdataCOMMON& (0+127)
   248                           
   249                           ; Clear objects allocated to BANK0
   250     0023  01C3               	clrf	__pbssBANK0& (0+127)
   251     0024  01C4               	clrf	(__pbssBANK0+1)& (0+127)
   252     0025  01C5               	clrf	(__pbssBANK0+2)& (0+127)
   253     0026  01C6               	clrf	(__pbssBANK0+3)& (0+127)
   254     0027  01C7               	clrf	(__pbssBANK0+4)& (0+127)
   255     0028  01C8               	clrf	(__pbssBANK0+5)& (0+127)
   256                           
   257                           ; Clear objects allocated to COMMON
   258     0029  01F7               	clrf	__pbssCOMMON& (0+127)
   259     002A  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   260     002B                     end_of_initialization:	
   261                           ;End of C runtime variable initialization code
   262                           
   263     002B                     __end_of__initialization:
   264     002B  0183               	clrf	3
   265     002C  120A  118A  282F   	ljmp	_main	;jump to C main() function
   266                           
   267                           	psect	bssCOMMON
   268     0077                     __pbssCOMMON:
   269     0077                     _interrupt_count:
   270     0077                     	ds	2
   271                           
   272                           	psect	dataCOMMON
   273     0079                     __pdataCOMMON:
   274     0079                     _display_state:
   275     0079                     	ds	1
   276                           
   277                           	psect	bssBANK0
   278     0043                     __pbssBANK0:
   279     0043                     main@F904:
   280     0043                     	ds	2
   281     0045                     main@F902:
   282     0045                     	ds	2
   283     0047                     _colloc:
   284     0047                     	ds	1
   285     0048                     _rowloc:
   286     0048                     	ds	1
   287                           
   288                           	psect	dataBANK0
   289     0037                     __pdataBANK0:
   290     0037                     _keypad:
   291     0037                     	ds	12
   292                           
   293                           	psect	inittext
   294     040F                     init_fetch0:	
   295                           ;	Called with low address in FSR and high address in W
   296                           
   297     040F  087E               	movf	126,w
   298     0410  008A               	movwf	10
   299     0411  087F               	movf	127,w
   300     0412  0082               	movwf	2
   301     0413                     init_ram0:	
   302                           ;Called with:
   303                           ;	high address of idata address in btemp 
   304                           ;	low address of idata address in btemp+1 
   305                           ;	low address of data in FSR
   306                           ;	high address + 1 of data in btemp-1
   307                           
   308     0413  240F  120A  118A   	fcall	init_fetch0
   309     0416  0080               	movwf	0
   310     0417  0A84               	incf	4,f
   311     0418  0804               	movf	4,w
   312     0419  067D               	xorwf	125,w
   313     041A  1903               	btfsc	3,2
   314     041B  3400               	retlw	0
   315     041C  0AFF               	incf	127,f
   316     041D  1903               	btfsc	3,2
   317     041E  0AFE               	incf	126,f
   318     041F  2C13               	goto	init_ram0
   319                           
   320                           	psect	cstackCOMMON
   321     0070                     __pcstackCOMMON:
   322     0070                     ?_keyinit:
   323     0070                     ?_timer0_init:	
   324                           ; 1 bytes @ 0x0
   325                           
   326     0070                     ?_key:	
   327                           ; 1 bytes @ 0x0
   328                           
   329     0070                     ?_isr:	
   330                           ; 1 bytes @ 0x0
   331                           
   332     0070                     ?_main:	
   333                           ; 1 bytes @ 0x0
   334                           
   335     0070                     ?i1_display:	
   336                           ; 1 bytes @ 0x0
   337                           
   338     0070                     i1display@port:	
   339                           ; 1 bytes @ 0x0
   340                           
   341                           
   342                           ; 1 bytes @ 0x0
   343     0070                     	ds	1
   344     0071                     ??i1_display:
   345     0071                     i1display@num:	
   346                           ; 1 bytes @ 0x1
   347                           
   348                           
   349                           ; 1 bytes @ 0x1
   350     0071                     	ds	1
   351     0072                     i1display@PORT:
   352                           
   353                           ; 2 bytes @ 0x2
   354     0072                     	ds	2
   355     0074                     ??_isr:
   356                           
   357                           ; 1 bytes @ 0x4
   358     0074                     	ds	3
   359                           
   360                           	psect	cstackBANK0
   361     0020                     __pcstackBANK0:
   362     0020                     ?_display:
   363     0020                     ??_keyinit:	
   364                           ; 1 bytes @ 0x0
   365                           
   366     0020                     ??_timer0_init:	
   367                           ; 1 bytes @ 0x0
   368                           
   369     0020                     ?_delay_ms:	
   370                           ; 1 bytes @ 0x0
   371                           
   372     0020                     ?___bmul:	
   373                           ; 1 bytes @ 0x0
   374                           
   375     0020                     display@port:	
   376                           ; 1 bytes @ 0x0
   377                           
   378     0020                     ___bmul@multiplicand:	
   379                           ; 1 bytes @ 0x0
   380                           
   381     0020                     delay_ms@milliseconds:	
   382                           ; 1 bytes @ 0x0
   383                           
   384                           
   385                           ; 2 bytes @ 0x0
   386     0020                     	ds	1
   387     0021                     ??_display:
   388     0021                     ??___bmul:	
   389                           ; 1 bytes @ 0x1
   390                           
   391     0021                     display@num:	
   392                           ; 1 bytes @ 0x1
   393                           
   394                           
   395                           ; 1 bytes @ 0x1
   396     0021                     	ds	1
   397     0022                     ??_delay_ms:
   398     0022                     ___bmul@product:	
   399                           ; 1 bytes @ 0x2
   400                           
   401     0022                     delay_ms@i:	
   402                           ; 1 bytes @ 0x2
   403                           
   404     0022                     display@PORT:	
   405                           ; 2 bytes @ 0x2
   406                           
   407                           
   408                           ; 2 bytes @ 0x2
   409     0022                     	ds	1
   410     0023                     ___bmul@multiplier:
   411                           
   412                           ; 1 bytes @ 0x3
   413     0023                     	ds	1
   414     0024                     ??_key:
   415     0024                     delay_ms@j:	
   416                           ; 1 bytes @ 0x4
   417                           
   418                           
   419                           ; 2 bytes @ 0x4
   420     0024                     	ds	2
   421     0026                     ?_blink:
   422     0026                     blink@n:	
   423                           ; 1 bytes @ 0x6
   424                           
   425                           
   426                           ; 2 bytes @ 0x6
   427     0026                     	ds	2
   428     0028                     blink@v_delay_ms:
   429                           
   430                           ; 2 bytes @ 0x8
   431     0028                     	ds	2
   432     002A                     blink@port:
   433                           
   434                           ; 2 bytes @ 0xA
   435     002A                     	ds	2
   436     002C                     ??_blink:
   437                           
   438                           ; 1 bytes @ 0xC
   439     002C                     	ds	2
   440     002E                     blink@t:
   441                           
   442                           ; 1 bytes @ 0xE
   443     002E                     	ds	1
   444     002F                     ??_main:
   445                           
   446                           ; 1 bytes @ 0xF
   447     002F                     	ds	1
   448     0030                     main@confirmation:
   449                           
   450                           ; 1 bytes @ 0x10
   451     0030                     	ds	1
   452     0031                     main@password:
   453                           
   454                           ; 2 bytes @ 0x11
   455     0031                     	ds	2
   456     0033                     main@new_password:
   457                           
   458                           ; 2 bytes @ 0x13
   459     0033                     	ds	2
   460     0035                     main@i:
   461                           
   462                           ; 1 bytes @ 0x15
   463     0035                     	ds	1
   464     0036                     main@i_112:
   465                           
   466                           ; 1 bytes @ 0x16
   467     0036                     	ds	1
   468                           
   469                           	psect	maintext
   470     002F                     __pmaintext:	
   471 ;;
   472 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   473 ;;
   474 ;; *************** function _main *****************
   475 ;; Defined at:
   476 ;;		line 53 in file "main_v1_1.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;  i               1   22[BANK0 ] unsigned char 
   481 ;;  i               1   21[BANK0 ] unsigned char 
   482 ;;  new_password    2   19[BANK0 ] unsigned char [2]
   483 ;;  password        2   17[BANK0 ] unsigned char [2]
   484 ;;  confirmation    1   16[BANK0 ] unsigned char 
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   489 ;; Tracked objects:
   490 ;;		On entry : B00/0
   491 ;;		On exit  : 300/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   494 ;;      Params:         0       0       0       0       0
   495 ;;      Locals:         0       7       0       0       0
   496 ;;      Temps:          0       1       0       0       0
   497 ;;      Totals:         0       8       0       0       0
   498 ;;Total ram usage:        8 bytes
   499 ;; Hardware stack levels required when called: 4
   500 ;; This function calls:
   501 ;;		_blink
   502 ;;		_display
   503 ;;		_key
   504 ;;		_keyinit
   505 ;;		_timer0_init
   506 ;; This function is called by:
   507 ;;		Startup code after reset
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511     002F                     _main:	
   512                           ;psect for function _main
   513                           
   514                           
   515                           ;main_v1_1.c: 54: TRISA = 0x00;
   516                           
   517                           ;incstack = 0
   518                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   519     002F  1683               	bsf	3,5	;RP0=1, select bank1
   520     0030  0185               	clrf	5	;volatile
   521                           
   522                           ;main_v1_1.c: 55: TRISC = 0x00;
   523     0031  0187               	clrf	7	;volatile
   524                           
   525                           ;main_v1_1.c: 56: TRISD = 0x00;
   526     0032  0188               	clrf	8	;volatile
   527                           
   528                           ;main_v1_1.c: 58: keyinit();
   529     0033  120A  118A  2447  120A  118A  	fcall	_keyinit
   530                           
   531                           ;main_v1_1.c: 59: timer0_init();
   532     0038  120A  118A  243D  120A  118A  	fcall	_timer0_init
   533     003D                     l1520:
   534                           
   535                           ;main_v1_1.c: 62: T0IE = 0;
   536     003D  128B               	bcf	11,5	;volatile
   537                           
   538                           ;main_v1_1.c: 64: display(10, 'C');
   539     003E  3043               	movlw	67
   540     003F  00A0               	movwf	display@port
   541     0040  300A               	movlw	10
   542     0041  120A  118A  2192  120A  118A  	fcall	_display
   543                           
   544                           ;main_v1_1.c: 65: display(10, 'D');
   545     0046  3044               	movlw	68
   546     0047  00A0               	movwf	display@port
   547     0048  300A               	movlw	10
   548     0049  120A  118A  2192  120A  118A  	fcall	_display
   549                           
   550                           ;main_v1_1.c: 67: unsigned char password[2] = {0, 0};
   551     004E  01B1               	clrf	main@password
   552     004F  01B2               	clrf	main@password+1
   553                           
   554                           ;main_v1_1.c: 68: unsigned char new_password[2] = {0, 0};
   555     0050  01B3               	clrf	main@new_password
   556     0051  01B4               	clrf	main@new_password+1
   557                           
   558                           ;main_v1_1.c: 70: unsigned char confirmation = 0;
   559     0052  01B0               	clrf	main@confirmation
   560     0053                     l1528:	
   561                           ;main_v1_1.c: 71: while(confirmation != '*') {
   562                           
   563     0053  302A               	movlw	42
   564     0054  0630               	xorwf	main@confirmation,w
   565     0055  1903               	btfsc	3,2
   566     0056  285E               	goto	l83
   567                           
   568                           ;main_v1_1.c: 72: confirmation = key();
   569     0057  120A  118A  22E8  120A  118A  	fcall	_key
   570     005C  00B0               	movwf	main@confirmation
   571     005D  2853               	goto	l1528
   572     005E                     l83:
   573                           
   574                           ;main_v1_1.c: 73: };main_v1_1.c: 75: T0IE = 1;
   575     005E  168B               	bsf	11,5	;volatile
   576                           
   577                           ;main_v1_1.c: 77: display(11, 'C');
   578     005F  3043               	movlw	67
   579     0060  00A0               	movwf	display@port
   580     0061  300B               	movlw	11
   581     0062  120A  118A  2192  120A  118A  	fcall	_display
   582                           
   583                           ;main_v1_1.c: 78: display(11, 'D');
   584     0067  3044               	movlw	68
   585     0068  00A0               	movwf	display@port
   586     0069  300B               	movlw	11
   587     006A  120A  118A  2192  120A  118A  	fcall	_display
   588                           
   589                           ;main_v1_1.c: 82: for (unsigned char i = 0; i < 2; i++) {
   590     006F  01B5               	clrf	main@i
   591     0070                     l86:
   592     0070  0835               	movf	main@i,w
   593     0071  3E31               	addlw	(low (main@password| 0))& (0+255)
   594     0072  0084               	movwf	4
   595     0073  1383               	bcf	3,7	;select IRP bank0
   596     0074  0800               	movf	0,w
   597     0075  1D03               	btfss	3,2
   598     0076  28B7               	goto	l1550
   599                           
   600                           ;main_v1_1.c: 84: password[i] = key();
   601     0077  120A  118A  22E8  120A  118A  	fcall	_key
   602     007C  00AF               	movwf	??_main
   603     007D  0835               	movf	main@i,w
   604     007E  3E31               	addlw	(low (main@password| 0))& (0+255)
   605     007F  0084               	movwf	4
   606     0080  082F               	movf	??_main,w
   607     0081  0080               	movwf	0
   608                           
   609                           ;main_v1_1.c: 85: if (password[i] == '*' || password[i] == '#') {
   610     0082  0835               	movf	main@i,w
   611     0083  3E31               	addlw	(low (main@password| 0))& (0+255)
   612     0084  0084               	movwf	4
   613     0085  302A               	movlw	42
   614     0086  0600               	xorwf	0,w
   615     0087  1903               	btfsc	3,2
   616     0088  2890               	goto	l1544
   617     0089  0835               	movf	main@i,w
   618     008A  3E31               	addlw	(low (main@password| 0))& (0+255)
   619     008B  0084               	movwf	4
   620     008C  3023               	movlw	35
   621     008D  0600               	xorwf	0,w
   622     008E  1D03               	btfss	3,2
   623     008F  2870               	goto	l86
   624     0090                     l1544:
   625                           
   626                           ;main_v1_1.c: 86: password[i] = 0;
   627     0090  0835               	movf	main@i,w
   628     0091  3E31               	addlw	(low (main@password| 0))& (0+255)
   629     0092  0084               	movwf	4
   630     0093  0180               	clrf	0
   631                           
   632                           ;main_v1_1.c: 88: blink(3, 200, 2);
   633     0094  3003               	movlw	3
   634     0095  00A6               	movwf	blink@n
   635     0096  3000               	movlw	0
   636     0097  00A7               	movwf	blink@n+1
   637     0098  30C8               	movlw	200
   638     0099  00A8               	movwf	blink@v_delay_ms
   639     009A  3000               	movlw	0
   640     009B  00A9               	movwf	blink@v_delay_ms+1
   641     009C  3002               	movlw	2
   642     009D  00AA               	movwf	blink@port
   643     009E  3000               	movlw	0
   644     009F  00AB               	movwf	blink@port+1
   645     00A0  120A  118A  235C  120A  118A  	fcall	_blink
   646                           
   647                           ;main_v1_1.c: 89: blink(1, 500, 1);
   648     00A5  3001               	movlw	1
   649     00A6  00A6               	movwf	blink@n
   650     00A7  3000               	movlw	0
   651     00A8  00A7               	movwf	blink@n+1
   652     00A9  30F4               	movlw	244
   653     00AA  00A8               	movwf	blink@v_delay_ms
   654     00AB  3001               	movlw	1
   655     00AC  00A9               	movwf	blink@v_delay_ms+1
   656     00AD  3001               	movlw	1
   657     00AE  00AA               	movwf	blink@port
   658     00AF  3000               	movlw	0
   659     00B0  00AB               	movwf	blink@port+1
   660     00B1  120A  118A  235C  120A  118A  	fcall	_blink
   661     00B6  2870               	goto	l86
   662     00B7                     l1550:
   663                           
   664                           ;main_v1_1.c: 90: };main_v1_1.c: 91: };main_v1_1.c: 92: if(i == 0) {
   665     00B7  0835               	movf	main@i,w
   666     00B8  1D03               	btfss	3,2
   667     00B9  28BF               	goto	l1556
   668                           
   669                           ;main_v1_1.c: 93: T0IE = 0;
   670     00BA  128B               	bcf	11,5	;volatile
   671                           
   672                           ;main_v1_1.c: 94: display(11, 'C');
   673     00BB  3043               	movlw	67
   674     00BC  00A0               	movwf	display@port
   675     00BD  300B               	movlw	11
   676     00BE  28C7               	goto	L1
   677     00BF                     l1556:	
   678                           ;main_v1_1.c: 96: } else {
   679                           
   680                           ;main_v1_1.c: 95: display(password[i] - 48, 'D');
   681                           
   682                           
   683                           ;main_v1_1.c: 97: display(password[i - 1] - 48, 'C');
   684     00BF  3043               	movlw	67
   685     00C0  00A0               	movwf	display@port
   686     00C1  0835               	movf	main@i,w
   687     00C2  3EFF               	addlw	255
   688     00C3  3E31               	addlw	(low (main@password| 0))& (0+255)
   689     00C4  0084               	movwf	4
   690     00C5  0800               	movf	0,w
   691     00C6  3ED0               	addlw	208
   692     00C7                     L1:
   693     00C7  120A  118A  2192  120A  118A  	fcall	_display
   694                           
   695                           ;main_v1_1.c: 98: display(password[i] - 48, 'D');
   696     00CC  3044               	movlw	68
   697     00CD  00A0               	movwf	display@port
   698     00CE  0835               	movf	main@i,w
   699     00CF  3E31               	addlw	(low (main@password| 0))& (0+255)
   700     00D0  0084               	movwf	4
   701     00D1  1383               	bcf	3,7	;select IRP bank0
   702     00D2  0800               	movf	0,w
   703     00D3  3ED0               	addlw	208
   704     00D4  120A  118A  2192  120A  118A  	fcall	_display
   705     00D9  3001               	movlw	1
   706     00DA  00AF               	movwf	??_main
   707     00DB  082F               	movf	??_main,w
   708     00DC  07B5               	addwf	main@i,f
   709     00DD  3002               	movlw	2
   710     00DE  0235               	subwf	main@i,w
   711     00DF  1C03               	skipc
   712     00E0  2870               	goto	l86
   713                           
   714                           ;main_v1_1.c: 99: };main_v1_1.c: 101: };main_v1_1.c: 103: blink(1, 1000, 0);
   715     00E1  3001               	movlw	1
   716     00E2  00A6               	movwf	blink@n
   717     00E3  3000               	movlw	0
   718     00E4  00A7               	movwf	blink@n+1
   719     00E5  30E8               	movlw	232
   720     00E6  00A8               	movwf	blink@v_delay_ms
   721     00E7  3003               	movlw	3
   722     00E8  00A9               	movwf	blink@v_delay_ms+1
   723     00E9  3000               	movlw	0
   724     00EA  00AA               	movwf	blink@port
   725     00EB  00AB               	movwf	blink@port+1
   726     00EC  120A  118A  235C  120A  118A  	fcall	_blink
   727     00F1                     l1564:
   728                           
   729                           ;main_v1_1.c: 106: PORTAbits.RA1 = 0xFF;
   730     00F1  1485               	bsf	5,1	;volatile
   731                           
   732                           ;main_v1_1.c: 108: T0IE = 1;
   733     00F2  168B               	bsf	11,5	;volatile
   734                           
   735                           ;main_v1_1.c: 110: display(11, 'C');
   736     00F3  3043               	movlw	67
   737     00F4  00A0               	movwf	display@port
   738     00F5  300B               	movlw	11
   739     00F6  120A  118A  2192  120A  118A  	fcall	_display
   740                           
   741                           ;main_v1_1.c: 111: display(11, 'D');
   742     00FB  3044               	movlw	68
   743     00FC  00A0               	movwf	display@port
   744     00FD  300B               	movlw	11
   745     00FE  120A  118A  2192  120A  118A  	fcall	_display
   746                           
   747                           ;main_v1_1.c: 113: for (unsigned char i = 0; i < 2; i++) {
   748     0103  01B6               	clrf	main@i_112
   749     0104                     l1586:
   750     0104  0836               	movf	main@i_112,w
   751     0105  3E33               	addlw	(low (main@new_password| 0))& (0+255)
   752     0106  0084               	movwf	4
   753     0107  1383               	bcf	3,7	;select IRP bank0
   754     0108  0800               	movf	0,w
   755     0109  1D03               	btfss	3,2
   756     010A  293B               	goto	l1588
   757                           
   758                           ;main_v1_1.c: 115: new_password[i] = key();
   759     010B  120A  118A  22E8  120A  118A  	fcall	_key
   760     0110  00AF               	movwf	??_main
   761     0111  0836               	movf	main@i_112,w
   762     0112  3E33               	addlw	(low (main@new_password| 0))& (0+255)
   763     0113  0084               	movwf	4
   764     0114  082F               	movf	??_main,w
   765     0115  0080               	movwf	0
   766                           
   767                           ;main_v1_1.c: 116: if (new_password[i] == '*' || new_password[i] == '#') {
   768     0116  0836               	movf	main@i_112,w
   769     0117  3E33               	addlw	(low (main@new_password| 0))& (0+255)
   770     0118  0084               	movwf	4
   771     0119  302A               	movlw	42
   772     011A  0600               	xorwf	0,w
   773     011B  1903               	btfsc	3,2
   774     011C  2924               	goto	l1580
   775     011D  0836               	movf	main@i_112,w
   776     011E  3E33               	addlw	(low (main@new_password| 0))& (0+255)
   777     011F  0084               	movwf	4
   778     0120  3023               	movlw	35
   779     0121  0600               	xorwf	0,w
   780     0122  1D03               	btfss	3,2
   781     0123  2904               	goto	l1586
   782     0124                     l1580:
   783                           
   784                           ;main_v1_1.c: 117: new_password[i] = 0;
   785     0124  0836               	movf	main@i_112,w
   786     0125  3E33               	addlw	(low (main@new_password| 0))& (0+255)
   787     0126  0084               	movwf	4
   788     0127  0180               	clrf	0
   789                           
   790                           ;main_v1_1.c: 118: blink(1, 500, 1);
   791     0128  3001               	movlw	1
   792     0129  00A6               	movwf	blink@n
   793     012A  3000               	movlw	0
   794     012B  00A7               	movwf	blink@n+1
   795     012C  30F4               	movlw	244
   796     012D  00A8               	movwf	blink@v_delay_ms
   797     012E  3001               	movlw	1
   798     012F  00A9               	movwf	blink@v_delay_ms+1
   799     0130  3001               	movlw	1
   800     0131  00AA               	movwf	blink@port
   801     0132  3000               	movlw	0
   802     0133  00AB               	movwf	blink@port+1
   803     0134  120A  118A  235C  120A  118A  	fcall	_blink
   804                           
   805                           ;main_v1_1.c: 119: PORTAbits.RA1 = 0xFF;
   806     0139  1485               	bsf	5,1	;volatile
   807     013A  2904               	goto	l1586
   808     013B                     l1588:
   809                           
   810                           ;main_v1_1.c: 120: };main_v1_1.c: 121: };main_v1_1.c: 122: if(i == 0) {
   811     013B  0836               	movf	main@i_112,w
   812     013C  1D03               	btfss	3,2
   813     013D  2943               	goto	l1594
   814                           
   815                           ;main_v1_1.c: 123: T0IE = 0;
   816     013E  128B               	bcf	11,5	;volatile
   817                           
   818                           ;main_v1_1.c: 124: display(11, 'C');
   819     013F  3043               	movlw	67
   820     0140  00A0               	movwf	display@port
   821     0141  300B               	movlw	11
   822     0142  294B               	goto	L2
   823     0143                     l1594:	
   824                           ;main_v1_1.c: 126: } else {
   825                           
   826                           ;main_v1_1.c: 125: display(new_password[i] - 48, 'D');
   827                           
   828                           
   829                           ;main_v1_1.c: 127: display(new_password[i - 1] - 48, 'C');
   830     0143  3043               	movlw	67
   831     0144  00A0               	movwf	display@port
   832     0145  0836               	movf	main@i_112,w
   833     0146  3EFF               	addlw	255
   834     0147  3E33               	addlw	(low (main@new_password| 0))& (0+255)
   835     0148  0084               	movwf	4
   836     0149  0800               	movf	0,w
   837     014A  3ED0               	addlw	208
   838     014B                     L2:
   839     014B  120A  118A  2192  120A  118A  	fcall	_display
   840                           
   841                           ;main_v1_1.c: 128: display(new_password[i] - 48, 'D');
   842     0150  3044               	movlw	68
   843     0151  00A0               	movwf	display@port
   844     0152  0836               	movf	main@i_112,w
   845     0153  3E33               	addlw	(low (main@new_password| 0))& (0+255)
   846     0154  0084               	movwf	4
   847     0155  1383               	bcf	3,7	;select IRP bank0
   848     0156  0800               	movf	0,w
   849     0157  3ED0               	addlw	208
   850     0158  120A  118A  2192  120A  118A  	fcall	_display
   851     015D  3001               	movlw	1
   852     015E  00AF               	movwf	??_main
   853     015F  082F               	movf	??_main,w
   854     0160  07B6               	addwf	main@i_112,f
   855     0161  3002               	movlw	2
   856     0162  0236               	subwf	main@i_112,w
   857     0163  1C03               	skipc
   858     0164  2904               	goto	l1586
   859                           
   860                           ;main_v1_1.c: 129: };main_v1_1.c: 131: };main_v1_1.c: 133: if (password[0] == new_passwo
      +                          rd[0] && password[1] == new_password[1]) {
   861     0165  0831               	movf	main@password,w
   862     0166  0633               	xorwf	main@new_password,w
   863     0167  1D03               	skipz
   864     0168  297E               	goto	l1608
   865     0169  0832               	movf	main@password+1,w
   866     016A  0634               	xorwf	main@new_password+1,w
   867     016B  1D03               	skipz
   868     016C  297E               	goto	l1608
   869                           
   870                           ;main_v1_1.c: 134: blink(1, 2500, 0);
   871     016D  3001               	movlw	1
   872     016E  00A6               	movwf	blink@n
   873     016F  3000               	movlw	0
   874     0170  00A7               	movwf	blink@n+1
   875     0171  30C4               	movlw	196
   876     0172  00A8               	movwf	blink@v_delay_ms
   877     0173  3009               	movlw	9
   878     0174  00A9               	movwf	blink@v_delay_ms+1
   879     0175  3000               	movlw	0
   880     0176  00AA               	movwf	blink@port
   881     0177  00AB               	movwf	blink@port+1
   882     0178  120A  118A  235C  120A  118A  	fcall	_blink
   883                           
   884                           ;main_v1_1.c: 135: break;
   885     017D  283D               	goto	l1520
   886     017E                     l1608:
   887                           
   888                           ;main_v1_1.c: 137: blink(1, 1000, 1);
   889     017E  3001               	movlw	1
   890     017F  00A6               	movwf	blink@n
   891     0180  3000               	movlw	0
   892     0181  00A7               	movwf	blink@n+1
   893     0182  30E8               	movlw	232
   894     0183  00A8               	movwf	blink@v_delay_ms
   895     0184  3003               	movlw	3
   896     0185  00A9               	movwf	blink@v_delay_ms+1
   897     0186  3001               	movlw	1
   898     0187  00AA               	movwf	blink@port
   899     0188  3000               	movlw	0
   900     0189  00AB               	movwf	blink@port+1
   901     018A  120A  118A  235C  120A  118A  	fcall	_blink
   902                           
   903                           ;main_v1_1.c: 138: new_password[0] = 0;
   904     018F  01B3               	clrf	main@new_password
   905                           
   906                           ;main_v1_1.c: 139: new_password[1] = 0;
   907     0190  01B4               	clrf	main@new_password+1
   908     0191  28F1               	goto	l1564
   909     0192                     __end_of_main:
   910                           
   911                           	psect	text1
   912     043D                     __ptext1:	
   913 ;; *************** function _timer0_init *****************
   914 ;; Defined at:
   915 ;;		line 285 in file "main_v1_1.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;		None
   918 ;; Auto vars:     Size  Location     Type
   919 ;;		None
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      void 
   922 ;; Registers used:
   923 ;;		wreg
   924 ;; Tracked objects:
   925 ;;		On entry : B00/100
   926 ;;		On exit  : B00/0
   927 ;;		Unchanged: 800/0
   928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   929 ;;      Params:         0       0       0       0       0
   930 ;;      Locals:         0       0       0       0       0
   931 ;;      Temps:          0       0       0       0       0
   932 ;;      Totals:         0       0       0       0       0
   933 ;;Total ram usage:        0 bytes
   934 ;; Hardware stack levels used: 1
   935 ;; Hardware stack levels required when called: 2
   936 ;; This function calls:
   937 ;;		Nothing
   938 ;; This function is called by:
   939 ;;		_main
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943     043D                     _timer0_init:	
   944                           ;psect for function _timer0_init
   945                           
   946                           
   947                           ;main_v1_1.c: 286: OPTION_REG = 0x07;
   948                           
   949                           ;incstack = 0
   950                           ; Regs used in _timer0_init: [wreg]
   951     043D  3007               	movlw	7
   952     043E  0081               	movwf	1	;volatile
   953                           
   954                           ;main_v1_1.c: 287: TMR0 = 61;
   955     043F  303D               	movlw	61
   956     0440  1283               	bcf	3,5	;RP0=0, select bank0
   957     0441  0081               	movwf	1	;volatile
   958                           
   959                           ;main_v1_1.c: 288: T0IE = 1;
   960     0442  168B               	bsf	11,5	;volatile
   961                           
   962                           ;main_v1_1.c: 289: T0IF = 0;
   963     0443  110B               	bcf	11,2	;volatile
   964                           
   965                           ;main_v1_1.c: 290: GIE = 1;
   966     0444  178B               	bsf	11,7	;volatile
   967                           
   968                           ;main_v1_1.c: 291: PEIE = 1;
   969     0445  170B               	bsf	11,6	;volatile
   970     0446  0008               	return
   971     0447                     __end_of_timer0_init:
   972                           
   973                           	psect	text2
   974     0447                     __ptext2:	
   975 ;; *************** function _keyinit *****************
   976 ;; Defined at:
   977 ;;		line 183 in file "main_v1_1.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;		None
   980 ;; Auto vars:     Size  Location     Type
   981 ;;		None
   982 ;; Return value:  Size  Location     Type
   983 ;;                  1    wreg      void 
   984 ;; Registers used:
   985 ;;		wreg, status,2, status,0
   986 ;; Tracked objects:
   987 ;;		On entry : B00/100
   988 ;;		On exit  : B00/100
   989 ;;		Unchanged: 800/0
   990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   991 ;;      Params:         0       0       0       0       0
   992 ;;      Locals:         0       0       0       0       0
   993 ;;      Temps:          0       1       0       0       0
   994 ;;      Totals:         0       1       0       0       0
   995 ;;Total ram usage:        1 bytes
   996 ;; Hardware stack levels used: 1
   997 ;; Hardware stack levels required when called: 2
   998 ;; This function calls:
   999 ;;		Nothing
  1000 ;; This function is called by:
  1001 ;;		_main
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005     0447                     _keyinit:	
  1006                           ;psect for function _keyinit
  1007                           
  1008                           
  1009                           ;main_v1_1.c: 185: TRISB=0XF0;
  1010                           
  1011                           ;incstack = 0
  1012                           ; Regs used in _keyinit: [wreg+status,2+status,0]
  1013     0447  30F0               	movlw	240
  1014     0448  0086               	movwf	6	;volatile
  1015                           
  1016                           ;main_v1_1.c: 186: OPTION_REG&=0X7F;
  1017     0449  307F               	movlw	127
  1018     044A  1283               	bcf	3,5	;RP0=0, select bank0
  1019     044B  00A0               	movwf	??_keyinit
  1020     044C  0820               	movf	??_keyinit,w
  1021     044D  1683               	bsf	3,5	;RP0=1, select bank1
  1022     044E  0581               	andwf	1,f	;volatile
  1023     044F  0008               	return
  1024     0450                     __end_of_keyinit:
  1025                           
  1026                           	psect	text3
  1027     02E8                     __ptext3:	
  1028 ;; *************** function _key *****************
  1029 ;; Defined at:
  1030 ;;		line 189 in file "main_v1_1.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;		None
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;		None
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  1    wreg      unsigned char 
  1037 ;; Registers used:
  1038 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1039 ;; Tracked objects:
  1040 ;;		On entry : 300/0
  1041 ;;		On exit  : B00/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1044 ;;      Params:         0       0       0       0       0
  1045 ;;      Locals:         0       0       0       0       0
  1046 ;;      Temps:          0       1       0       0       0
  1047 ;;      Totals:         0       1       0       0       0
  1048 ;;Total ram usage:        1 bytes
  1049 ;; Hardware stack levels used: 1
  1050 ;; Hardware stack levels required when called: 3
  1051 ;; This function calls:
  1052 ;;		___bmul
  1053 ;; This function is called by:
  1054 ;;		_main
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058     02E8                     _key:	
  1059                           ;psect for function _key
  1060                           
  1061                           
  1062                           ;main_v1_1.c: 191: PORTB=0X00;
  1063                           
  1064                           ;incstack = 0
  1065                           ; Regs used in _key: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1066     02E8  0186               	clrf	6	;volatile
  1067     02E9                     l136:	
  1068                           ;main_v1_1.c: 192: while(RB4&&RB5&&RB6);
  1069                           
  1070     02E9  1A06               	btfsc	6,4	;volatile
  1071     02EA  1E86               	btfss	6,5	;volatile
  1072     02EB  2B27               	goto	l141
  1073     02EC  1F06               	btfss	6,6	;volatile
  1074     02ED  2B27               	goto	l141
  1075     02EE  2AE9               	goto	l136
  1076     02EF                     l142:
  1077                           
  1078                           ;main_v1_1.c: 194: RB0=0;
  1079     02EF  1006               	bcf	6,0	;volatile
  1080                           
  1081                           ;main_v1_1.c: 195: RB1=RB2=RB3=1;
  1082     02F0  1586               	bsf	6,3	;volatile
  1083     02F1  1D86               	btfss	6,3	;volatile
  1084     02F2  2AF7               	goto	u760
  1085     02F3  1283               	bcf	3,5	;RP0=0, select bank0
  1086     02F4  1303               	bcf	3,6	;RP1=0, select bank0
  1087     02F5  1506               	bsf	6,2	;volatile
  1088     02F6  2AFA               	goto	u774
  1089     02F7                     u760:
  1090     02F7  1283               	bcf	3,5	;RP0=0, select bank0
  1091     02F8  1303               	bcf	3,6	;RP1=0, select bank0
  1092     02F9  1106               	bcf	6,2	;volatile
  1093     02FA                     u774:
  1094     02FA  1D06               	btfss	6,2	;volatile
  1095     02FB  2B00               	goto	u770
  1096     02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1097     02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1098     02FE  1486               	bsf	6,1	;volatile
  1099     02FF  2B03               	goto	u784
  1100     0300                     u770:
  1101     0300  1283               	bcf	3,5	;RP0=0, select bank0
  1102     0301  1303               	bcf	3,6	;RP1=0, select bank0
  1103     0302  1086               	bcf	6,1	;volatile
  1104     0303                     u784:
  1105                           
  1106                           ;main_v1_1.c: 196: if(!RB4||!RB5||!RB6) {
  1107     0303  1A06               	btfsc	6,4	;volatile
  1108     0304  1E86               	btfss	6,5	;volatile
  1109     0305  2B08               	goto	l1166
  1110     0306  1B06               	btfsc	6,6	;volatile
  1111     0307  2B0A               	goto	l143
  1112     0308                     l1166:
  1113                           
  1114                           ;main_v1_1.c: 197: rowloc=0;
  1115     0308  01C8               	clrf	_rowloc
  1116                           
  1117                           ;main_v1_1.c: 198: break;
  1118     0309  2B2C               	goto	l146
  1119     030A                     l143:
  1120                           
  1121                           ;main_v1_1.c: 199: };main_v1_1.c: 200: RB1=0;RB0=1;
  1122     030A  1086               	bcf	6,1	;volatile
  1123     030B  1406               	bsf	6,0	;volatile
  1124                           
  1125                           ;main_v1_1.c: 201: if(!RB4||!RB5||!RB6) {
  1126     030C  1A06               	btfsc	6,4	;volatile
  1127     030D  1E86               	btfss	6,5	;volatile
  1128     030E  2B11               	goto	l149
  1129     030F  1B06               	btfsc	6,6	;volatile
  1130     0310  2B14               	goto	l147
  1131     0311                     l149:
  1132                           
  1133                           ;main_v1_1.c: 202: rowloc=1;
  1134     0311  01C8               	clrf	_rowloc
  1135     0312  0AC8               	incf	_rowloc,f
  1136                           
  1137                           ;main_v1_1.c: 203: break;
  1138     0313  2B2C               	goto	l146
  1139     0314                     l147:
  1140                           
  1141                           ;main_v1_1.c: 204: };main_v1_1.c: 205: RB2=0;RB1=1;
  1142     0314  1106               	bcf	6,2	;volatile
  1143     0315  1486               	bsf	6,1	;volatile
  1144                           
  1145                           ;main_v1_1.c: 206: if(!RB4||!RB5||!RB6) {
  1146     0316  1A06               	btfsc	6,4	;volatile
  1147     0317  1E86               	btfss	6,5	;volatile
  1148     0318  2B1B               	goto	l1176
  1149     0319  1B06               	btfsc	6,6	;volatile
  1150     031A  2B1D               	goto	l150
  1151     031B                     l1176:
  1152                           
  1153                           ;main_v1_1.c: 207: rowloc=2;
  1154     031B  3002               	movlw	2
  1155     031C  2B25               	goto	L3
  1156     031D                     l150:	
  1157                           ;main_v1_1.c: 208: break;
  1158                           
  1159                           
  1160                           ;main_v1_1.c: 209: };main_v1_1.c: 210: RB3=0; RB2=1;
  1161     031D  1186               	bcf	6,3	;volatile
  1162     031E  1506               	bsf	6,2	;volatile
  1163                           
  1164                           ;main_v1_1.c: 211: if(!RB4||!RB5||!RB6){
  1165     031F  1A06               	btfsc	6,4	;volatile
  1166     0320  1E86               	btfss	6,5	;volatile
  1167     0321  2B24               	goto	l1182
  1168     0322  1B06               	btfsc	6,6	;volatile
  1169     0323  2B27               	goto	l141
  1170     0324                     l1182:
  1171                           
  1172                           ;main_v1_1.c: 212: rowloc=3;
  1173     0324  3003               	movlw	3
  1174     0325                     L3:
  1175     0325  00C8               	movwf	_rowloc
  1176                           
  1177                           ;main_v1_1.c: 213: break;
  1178     0326  2B2C               	goto	l146
  1179     0327                     l141:
  1180     0327  1A06               	btfsc	6,4	;volatile
  1181     0328  1E86               	btfss	6,5	;volatile
  1182     0329  2AEF               	goto	l142
  1183     032A  1F06               	btfss	6,6	;volatile
  1184     032B  2AEF               	goto	l142
  1185     032C                     l146:
  1186                           
  1187                           ;main_v1_1.c: 214: };main_v1_1.c: 215: };main_v1_1.c: 216: if(RB4==0&&RB5!=0&&RB6!=0)
  1188     032C  1E06               	btfss	6,4	;volatile
  1189     032D  1E86               	btfss	6,5	;volatile
  1190     032E  2B33               	goto	l156
  1191     032F  1F06               	btfss	6,6	;volatile
  1192     0330  2B33               	goto	l156
  1193                           
  1194                           ;main_v1_1.c: 217: colloc=0;
  1195     0331  01C7               	clrf	_colloc
  1196     0332  2B49               	goto	l163
  1197     0333                     l156:
  1198                           
  1199                           ;main_v1_1.c: 218: else if(RB4!=0&&RB5==0&&RB6!=0)
  1200     0333  1A06               	btfsc	6,4	;volatile
  1201     0334  1A86               	btfsc	6,5	;volatile
  1202     0335  2B3B               	goto	l158
  1203     0336  1F06               	btfss	6,6	;volatile
  1204     0337  2B3B               	goto	l158
  1205                           
  1206                           ;main_v1_1.c: 219: colloc=1;
  1207     0338  01C7               	clrf	_colloc
  1208     0339  0AC7               	incf	_colloc,f
  1209     033A  2B49               	goto	l163
  1210     033B                     l158:
  1211                           
  1212                           ;main_v1_1.c: 220: else if(RB4!=0&&RB5!=0&&RB6==0)
  1213     033B  1A06               	btfsc	6,4	;volatile
  1214     033C  1E86               	btfss	6,5	;volatile
  1215     033D  2B42               	goto	l160
  1216     033E  1B06               	btfsc	6,6	;volatile
  1217     033F  2B42               	goto	l160
  1218                           
  1219                           ;main_v1_1.c: 221: colloc=2;
  1220     0340  3002               	movlw	2
  1221     0341  2B48               	goto	L4
  1222     0342                     l160:
  1223                           
  1224                           ;main_v1_1.c: 222: else if(RB4!=0&&RB5!=0&&RB6!=0)
  1225     0342  1A06               	btfsc	6,4	;volatile
  1226     0343  1E86               	btfss	6,5	;volatile
  1227     0344  2B49               	goto	l163
  1228     0345  1F06               	btfss	6,6	;volatile
  1229     0346  2B49               	goto	l163
  1230                           
  1231                           ;main_v1_1.c: 223: colloc=3;
  1232     0347  3003               	movlw	3
  1233     0348                     L4:
  1234     0348  00C7               	movwf	_colloc
  1235     0349                     l163:
  1236     0349  1A06               	btfsc	6,4	;volatile
  1237     034A  1E86               	btfss	6,5	;volatile
  1238     034B  2B49               	goto	l163
  1239     034C  1F06               	btfss	6,6	;volatile
  1240     034D  2B49               	goto	l163
  1241                           
  1242                           ;main_v1_1.c: 225: return (keypad[rowloc][colloc]);
  1243     034E  3003               	movlw	3
  1244     034F  00A0               	movwf	___bmul@multiplicand
  1245     0350  0848               	movf	_rowloc,w
  1246     0351  120A  118A  2420   	fcall	___bmul
  1247     0354  3E37               	addlw	(low (_keypad| 0))& (0+255)
  1248     0355  0747               	addwf	_colloc,w
  1249     0356  00A4               	movwf	??_key
  1250     0357  0824               	movf	??_key,w
  1251     0358  0084               	movwf	4
  1252     0359  1383               	bcf	3,7	;select IRP bank0
  1253     035A  0800               	movf	0,w
  1254     035B  0008               	return
  1255     035C                     __end_of_key:
  1256                           
  1257                           	psect	text4
  1258     0420                     __ptext4:	
  1259 ;; *************** function ___bmul *****************
  1260 ;; Defined at:
  1261 ;;		line 4 in file "/opt/microchip/xc8/v2.46/pic/sources/c90/common/Umul8.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  multiplier      1    wreg     unsigned char 
  1264 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;  multiplier      1    3[BANK0 ] unsigned char 
  1267 ;;  product         1    2[BANK0 ] unsigned char 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      unsigned char 
  1270 ;; Registers used:
  1271 ;;		wreg, status,2, status,0
  1272 ;; Tracked objects:
  1273 ;;		On entry : 300/0
  1274 ;;		On exit  : 300/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1277 ;;      Params:         0       1       0       0       0
  1278 ;;      Locals:         0       2       0       0       0
  1279 ;;      Temps:          0       1       0       0       0
  1280 ;;      Totals:         0       4       0       0       0
  1281 ;;Total ram usage:        4 bytes
  1282 ;; Hardware stack levels used: 1
  1283 ;; Hardware stack levels required when called: 2
  1284 ;; This function calls:
  1285 ;;		Nothing
  1286 ;; This function is called by:
  1287 ;;		_key
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291     0420                     ___bmul:	
  1292                           ;psect for function ___bmul
  1293                           
  1294                           
  1295                           ;incstack = 0
  1296                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1297                           ;___bmul@multiplier stored from wreg
  1298     0420  00A3               	movwf	___bmul@multiplier
  1299     0421  01A2               	clrf	___bmul@product
  1300     0422                     l1088:
  1301     0422  1C23               	btfss	___bmul@multiplier,0
  1302     0423  2C28               	goto	l1092
  1303     0424  0820               	movf	___bmul@multiplicand,w
  1304     0425  00A1               	movwf	??___bmul
  1305     0426  0821               	movf	??___bmul,w
  1306     0427  07A2               	addwf	___bmul@product,f
  1307     0428                     l1092:
  1308     0428  1003               	clrc
  1309     0429  0DA0               	rlf	___bmul@multiplicand,f
  1310     042A  1003               	clrc
  1311     042B  0CA3               	rrf	___bmul@multiplier,f
  1312     042C  0823               	movf	___bmul@multiplier,w
  1313     042D  1D03               	btfss	3,2
  1314     042E  2C22               	goto	l1088
  1315     042F  0822               	movf	___bmul@product,w
  1316     0430  0008               	return
  1317     0431                     __end_of___bmul:
  1318                           
  1319                           	psect	text5
  1320     0192                     __ptext5:	
  1321 ;; *************** function _display *****************
  1322 ;; Defined at:
  1323 ;;		line 228 in file "main_v1_1.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;  num             1    wreg     unsigned char 
  1326 ;;  port            1    0[BANK0 ] unsigned char 
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;  num             1    1[BANK0 ] unsigned char 
  1329 ;;  PORT            2    2[BANK0 ] PTR volatile unsigned ch
  1330 ;;		 -> PORTD(1), PORTC(1), PORTB(1), 
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  1    wreg      void 
  1333 ;; Registers used:
  1334 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1335 ;; Tracked objects:
  1336 ;;		On entry : 300/0
  1337 ;;		On exit  : 300/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1340 ;;      Params:         0       1       0       0       0
  1341 ;;      Locals:         0       3       0       0       0
  1342 ;;      Temps:          0       0       0       0       0
  1343 ;;      Totals:         0       4       0       0       0
  1344 ;;Total ram usage:        4 bytes
  1345 ;; Hardware stack levels used: 1
  1346 ;; Hardware stack levels required when called: 2
  1347 ;; This function calls:
  1348 ;;		Nothing
  1349 ;; This function is called by:
  1350 ;;		_main
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354     0192                     _display:	
  1355                           ;psect for function _display
  1356                           
  1357                           
  1358                           ;incstack = 0
  1359                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0]
  1360                           ;display@num stored from wreg
  1361     0192  00A1               	movwf	display@num
  1362                           
  1363                           ;main_v1_1.c: 229: volatile unsigned char *PORT;;main_v1_1.c: 232: if (port == 'B') {
  1364     0193  3042               	movlw	66
  1365     0194  0620               	xorwf	display@port,w
  1366     0195  1D03               	btfss	3,2
  1367     0196  299B               	goto	l1440
  1368                           
  1369                           ;main_v1_1.c: 233: PORT = &PORTB;
  1370     0197  3000               	movlw	0
  1371     0198  00A3               	movwf	display@PORT+1
  1372     0199  3006               	movlw	6
  1373     019A  29AA               	goto	L6
  1374     019B                     l1440:	
  1375                           ;main_v1_1.c: 234: } else if (port == 'C') {
  1376                           
  1377     019B  3043               	movlw	67
  1378     019C  0620               	xorwf	display@port,w
  1379     019D  1D03               	btfss	3,2
  1380     019E  29A3               	goto	l1444
  1381                           
  1382                           ;main_v1_1.c: 235: PORT = &PORTC;
  1383     019F  3000               	movlw	0
  1384     01A0  00A3               	movwf	display@PORT+1
  1385     01A1  3007               	movlw	7
  1386     01A2  29AA               	goto	L6
  1387     01A3                     l1444:	
  1388                           ;main_v1_1.c: 236: } else if (port == 'D') {
  1389                           
  1390     01A3  3044               	movlw	68
  1391     01A4  0620               	xorwf	display@port,w
  1392     01A5  1D03               	btfss	3,2
  1393     01A6  0008               	return
  1394                           
  1395                           ;main_v1_1.c: 237: PORT = &PORTD;
  1396     01A7  3000               	movlw	0
  1397     01A8  00A3               	movwf	display@PORT+1
  1398     01A9  3008               	movlw	8
  1399     01AA                     L6:
  1400     01AA  00A2               	movwf	display@PORT
  1401                           
  1402                           ;main_v1_1.c: 238: } else {
  1403     01AB  2A13               	goto	l1476
  1404     01AC                     l1448:
  1405                           
  1406                           ;main_v1_1.c: 244: *PORT = 0x3F;
  1407     01AC  0822               	movf	display@PORT,w
  1408     01AD  0084               	movwf	4
  1409     01AE  1783               	bsf	3,7
  1410     01AF  1C23               	btfss	display@PORT+1,0
  1411     01B0  1383               	bcf	3,7
  1412     01B1  303F               	movlw	63
  1413     01B2  0080               	movwf	0
  1414                           
  1415                           ;main_v1_1.c: 245: break;
  1416     01B3  0008               	return
  1417     01B4                     l1450:
  1418                           
  1419                           ;main_v1_1.c: 247: *PORT = 0x06;
  1420     01B4  0822               	movf	display@PORT,w
  1421     01B5  0084               	movwf	4
  1422     01B6  1783               	bsf	3,7
  1423     01B7  1C23               	btfss	display@PORT+1,0
  1424     01B8  1383               	bcf	3,7
  1425     01B9  3006               	movlw	6
  1426     01BA  0080               	movwf	0
  1427                           
  1428                           ;main_v1_1.c: 248: break;
  1429     01BB  0008               	return
  1430     01BC                     l1452:
  1431                           
  1432                           ;main_v1_1.c: 250: *PORT = 0x5B;
  1433     01BC  0822               	movf	display@PORT,w
  1434     01BD  0084               	movwf	4
  1435     01BE  1783               	bsf	3,7
  1436     01BF  1C23               	btfss	display@PORT+1,0
  1437     01C0  1383               	bcf	3,7
  1438     01C1  305B               	movlw	91
  1439     01C2  0080               	movwf	0
  1440                           
  1441                           ;main_v1_1.c: 251: break;
  1442     01C3  0008               	return
  1443     01C4                     l1454:
  1444                           
  1445                           ;main_v1_1.c: 253: *PORT = 0x4F;
  1446     01C4  0822               	movf	display@PORT,w
  1447     01C5  0084               	movwf	4
  1448     01C6  1783               	bsf	3,7
  1449     01C7  1C23               	btfss	display@PORT+1,0
  1450     01C8  1383               	bcf	3,7
  1451     01C9  304F               	movlw	79
  1452     01CA  0080               	movwf	0
  1453                           
  1454                           ;main_v1_1.c: 254: break;
  1455     01CB  0008               	return
  1456     01CC                     l1456:
  1457                           
  1458                           ;main_v1_1.c: 256: *PORT = 0x66;
  1459     01CC  0822               	movf	display@PORT,w
  1460     01CD  0084               	movwf	4
  1461     01CE  1783               	bsf	3,7
  1462     01CF  1C23               	btfss	display@PORT+1,0
  1463     01D0  1383               	bcf	3,7
  1464     01D1  3066               	movlw	102
  1465     01D2  0080               	movwf	0
  1466                           
  1467                           ;main_v1_1.c: 257: break;
  1468     01D3  0008               	return
  1469     01D4                     l1458:
  1470                           
  1471                           ;main_v1_1.c: 259: *PORT = 0x6D;
  1472     01D4  0822               	movf	display@PORT,w
  1473     01D5  0084               	movwf	4
  1474     01D6  1783               	bsf	3,7
  1475     01D7  1C23               	btfss	display@PORT+1,0
  1476     01D8  1383               	bcf	3,7
  1477     01D9  306D               	movlw	109
  1478     01DA  0080               	movwf	0
  1479                           
  1480                           ;main_v1_1.c: 260: break;
  1481     01DB  0008               	return
  1482     01DC                     l1460:
  1483                           
  1484                           ;main_v1_1.c: 262: *PORT = 0x7D;
  1485     01DC  0822               	movf	display@PORT,w
  1486     01DD  0084               	movwf	4
  1487     01DE  1783               	bsf	3,7
  1488     01DF  1C23               	btfss	display@PORT+1,0
  1489     01E0  1383               	bcf	3,7
  1490     01E1  307D               	movlw	125
  1491     01E2  0080               	movwf	0
  1492                           
  1493                           ;main_v1_1.c: 263: break;
  1494     01E3  0008               	return
  1495     01E4                     l1462:
  1496                           
  1497                           ;main_v1_1.c: 265: *PORT = 0x07;
  1498     01E4  0822               	movf	display@PORT,w
  1499     01E5  0084               	movwf	4
  1500     01E6  1783               	bsf	3,7
  1501     01E7  1C23               	btfss	display@PORT+1,0
  1502     01E8  1383               	bcf	3,7
  1503     01E9  3007               	movlw	7
  1504     01EA  0080               	movwf	0
  1505                           
  1506                           ;main_v1_1.c: 266: break;
  1507     01EB  0008               	return
  1508     01EC                     l1464:
  1509                           
  1510                           ;main_v1_1.c: 268: *PORT = 0x7F;
  1511     01EC  0822               	movf	display@PORT,w
  1512     01ED  0084               	movwf	4
  1513     01EE  1783               	bsf	3,7
  1514     01EF  1C23               	btfss	display@PORT+1,0
  1515     01F0  1383               	bcf	3,7
  1516     01F1  307F               	movlw	127
  1517     01F2  0080               	movwf	0
  1518                           
  1519                           ;main_v1_1.c: 269: break;
  1520     01F3  0008               	return
  1521     01F4                     l1466:
  1522                           
  1523                           ;main_v1_1.c: 271: *PORT = 0x6F;
  1524     01F4  0822               	movf	display@PORT,w
  1525     01F5  0084               	movwf	4
  1526     01F6  1783               	bsf	3,7
  1527     01F7  1C23               	btfss	display@PORT+1,0
  1528     01F8  1383               	bcf	3,7
  1529     01F9  306F               	movlw	111
  1530     01FA  0080               	movwf	0
  1531                           
  1532                           ;main_v1_1.c: 272: break;
  1533     01FB  0008               	return
  1534     01FC                     l1468:
  1535                           
  1536                           ;main_v1_1.c: 274: *PORT = 0x40;
  1537     01FC  0822               	movf	display@PORT,w
  1538     01FD  0084               	movwf	4
  1539     01FE  1783               	bsf	3,7
  1540     01FF  1C23               	btfss	display@PORT+1,0
  1541     0200  1383               	bcf	3,7
  1542     0201  3040               	movlw	64
  1543     0202  0080               	movwf	0
  1544                           
  1545                           ;main_v1_1.c: 275: break;
  1546     0203  0008               	return
  1547     0204                     l1470:
  1548                           
  1549                           ;main_v1_1.c: 277: *PORT = 0x08;
  1550     0204  0822               	movf	display@PORT,w
  1551     0205  0084               	movwf	4
  1552     0206  1783               	bsf	3,7
  1553     0207  1C23               	btfss	display@PORT+1,0
  1554     0208  1383               	bcf	3,7
  1555     0209  3008               	movlw	8
  1556     020A  0080               	movwf	0
  1557                           
  1558                           ;main_v1_1.c: 278: break;
  1559     020B  0008               	return
  1560     020C                     l1472:
  1561                           
  1562                           ;main_v1_1.c: 280: *PORT = 0x00;
  1563     020C  0822               	movf	display@PORT,w
  1564     020D  0084               	movwf	4
  1565     020E  1783               	bsf	3,7
  1566     020F  1C23               	btfss	display@PORT+1,0
  1567     0210  1383               	bcf	3,7
  1568     0211  0180               	clrf	0
  1569                           
  1570                           ;main_v1_1.c: 281: break;
  1571     0212  0008               	return
  1572     0213                     l1476:
  1573     0213  0821               	movf	display@num,w
  1574                           
  1575                           ; Switch size 1, requested type "simple"
  1576                           ; Number of cases is 13, Range of values is 0 to 12
  1577                           ; switch strategies available:
  1578                           ; Name         Instructions Cycles
  1579                           ; simple_byte           40    21 (average)
  1580                           ; direct_byte           47     8 (fixed)
  1581                           ; jumptable            260     6 (fixed)
  1582                           ;	Chosen strategy is simple_byte
  1583     0214  3A00               	xorlw	0	; case 0
  1584     0215  1903               	skipnz
  1585     0216  29AC               	goto	l1448
  1586     0217  3A01               	xorlw	1	; case 1
  1587     0218  1903               	skipnz
  1588     0219  29B4               	goto	l1450
  1589     021A  3A03               	xorlw	3	; case 2
  1590     021B  1903               	skipnz
  1591     021C  29BC               	goto	l1452
  1592     021D  3A01               	xorlw	1	; case 3
  1593     021E  1903               	skipnz
  1594     021F  29C4               	goto	l1454
  1595     0220  3A07               	xorlw	7	; case 4
  1596     0221  1903               	skipnz
  1597     0222  29CC               	goto	l1456
  1598     0223  3A01               	xorlw	1	; case 5
  1599     0224  1903               	skipnz
  1600     0225  29D4               	goto	l1458
  1601     0226  3A03               	xorlw	3	; case 6
  1602     0227  1903               	skipnz
  1603     0228  29DC               	goto	l1460
  1604     0229  3A01               	xorlw	1	; case 7
  1605     022A  1903               	skipnz
  1606     022B  29E4               	goto	l1462
  1607     022C  3A0F               	xorlw	15	; case 8
  1608     022D  1903               	skipnz
  1609     022E  29EC               	goto	l1464
  1610     022F  3A01               	xorlw	1	; case 9
  1611     0230  1903               	skipnz
  1612     0231  29F4               	goto	l1466
  1613     0232  3A03               	xorlw	3	; case 10
  1614     0233  1903               	skipnz
  1615     0234  29FC               	goto	l1468
  1616     0235  3A01               	xorlw	1	; case 11
  1617     0236  1903               	skipnz
  1618     0237  2A04               	goto	l1470
  1619     0238  3A07               	xorlw	7	; case 12
  1620     0239  1903               	skipnz
  1621     023A  2A0C               	goto	l1472
  1622     023B  2A3C               	goto	l175
  1623     023C                     l175:
  1624     023C  0008               	return
  1625     023D                     __end_of_display:
  1626                           
  1627                           	psect	text6
  1628     035C                     __ptext6:	
  1629 ;; *************** function _blink *****************
  1630 ;; Defined at:
  1631 ;;		line 158 in file "main_v1_1.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;  n               2    6[BANK0 ] unsigned int 
  1634 ;;  v_delay_ms      2    8[BANK0 ] unsigned int 
  1635 ;;  port            2   10[BANK0 ] unsigned int 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  t               1   14[BANK0 ] unsigned char 
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1642 ;; Tracked objects:
  1643 ;;		On entry : 300/0
  1644 ;;		On exit  : 300/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1647 ;;      Params:         0       6       0       0       0
  1648 ;;      Locals:         0       1       0       0       0
  1649 ;;      Temps:          0       2       0       0       0
  1650 ;;      Totals:         0       9       0       0       0
  1651 ;;Total ram usage:        9 bytes
  1652 ;; Hardware stack levels used: 1
  1653 ;; Hardware stack levels required when called: 3
  1654 ;; This function calls:
  1655 ;;		_delay_ms
  1656 ;; This function is called by:
  1657 ;;		_main
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661     035C                     _blink:	
  1662                           ;psect for function _blink
  1663                           
  1664                           
  1665                           ;main_v1_1.c: 159: for (unsigned char t = 0; t < n; t++) {
  1666                           
  1667                           ;incstack = 0
  1668                           ; Regs used in _blink: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1669     035C  01AE               	clrf	blink@t
  1670     035D  2B8E               	goto	l1508
  1671     035E                     l125:	
  1672                           ;main_v1_1.c: 161: case 0:
  1673                           
  1674                           
  1675                           ;main_v1_1.c: 162: PORTAbits.RA0 = 0xFF;
  1676     035E  1405               	bsf	5,0	;volatile
  1677                           
  1678                           ;main_v1_1.c: 163: delay_ms(v_delay_ms);
  1679     035F  0829               	movf	blink@v_delay_ms+1,w
  1680     0360  00A1               	movwf	delay_ms@milliseconds+1
  1681     0361  0828               	movf	blink@v_delay_ms,w
  1682     0362  00A0               	movwf	delay_ms@milliseconds
  1683     0363  120A  118A  23EF  120A  118A  	fcall	_delay_ms
  1684                           
  1685                           ;main_v1_1.c: 164: PORTAbits.RA0 = 0x00;
  1686     0368  1005               	bcf	5,0	;volatile
  1687     0369  2B81               	goto	L7
  1688     036A                     l127:	
  1689                           ;main_v1_1.c: 167: case 1:
  1690                           
  1691                           ;main_v1_1.c: 166: break;
  1692                           
  1693                           ;main_v1_1.c: 165: delay_ms(v_delay_ms);
  1694                           
  1695                           
  1696                           ;main_v1_1.c: 168: PORTAbits.RA1 = 0xFF;
  1697     036A  1485               	bsf	5,1	;volatile
  1698                           
  1699                           ;main_v1_1.c: 169: delay_ms(v_delay_ms);
  1700     036B  0829               	movf	blink@v_delay_ms+1,w
  1701     036C  00A1               	movwf	delay_ms@milliseconds+1
  1702     036D  0828               	movf	blink@v_delay_ms,w
  1703     036E  00A0               	movwf	delay_ms@milliseconds
  1704     036F  120A  118A  23EF  120A  118A  	fcall	_delay_ms
  1705                           
  1706                           ;main_v1_1.c: 170: PORTAbits.RA1 = 0x00;
  1707     0374  1085               	bcf	5,1	;volatile
  1708     0375  2B81               	goto	L7
  1709     0376                     l128:	
  1710                           ;main_v1_1.c: 173: case 2:
  1711                           
  1712                           ;main_v1_1.c: 172: break;
  1713                           
  1714                           ;main_v1_1.c: 171: delay_ms(v_delay_ms);
  1715                           
  1716                           
  1717                           ;main_v1_1.c: 174: PORTAbits.RA2 = 0xFF;
  1718     0376  1505               	bsf	5,2	;volatile
  1719                           
  1720                           ;main_v1_1.c: 175: delay_ms(v_delay_ms);
  1721     0377  0829               	movf	blink@v_delay_ms+1,w
  1722     0378  00A1               	movwf	delay_ms@milliseconds+1
  1723     0379  0828               	movf	blink@v_delay_ms,w
  1724     037A  00A0               	movwf	delay_ms@milliseconds
  1725     037B  120A  118A  23EF  120A  118A  	fcall	_delay_ms
  1726                           
  1727                           ;main_v1_1.c: 176: PORTAbits.RA2 = 0x00;
  1728     0380  1105               	bcf	5,2	;volatile
  1729     0381                     L7:
  1730                           
  1731                           ;main_v1_1.c: 177: delay_ms(v_delay_ms);
  1732     0381  0829               	movf	blink@v_delay_ms+1,w
  1733     0382  00A1               	movwf	delay_ms@milliseconds+1
  1734     0383  0828               	movf	blink@v_delay_ms,w
  1735     0384  00A0               	movwf	delay_ms@milliseconds
  1736     0385  120A  118A  23EF  120A  118A  	fcall	_delay_ms
  1737     038A                     l1506:	
  1738                           ;main_v1_1.c: 178: break;
  1739                           
  1740     038A  3001               	movlw	1
  1741     038B  00AC               	movwf	??_blink
  1742     038C  082C               	movf	??_blink,w
  1743     038D  07AE               	addwf	blink@t,f
  1744     038E                     l1508:
  1745     038E  082E               	movf	blink@t,w
  1746     038F  00AC               	movwf	??_blink
  1747     0390  01AD               	clrf	??_blink+1
  1748     0391  0827               	movf	blink@n+1,w
  1749     0392  022D               	subwf	??_blink+1,w
  1750     0393  1D03               	skipz
  1751     0394  2B97               	goto	u1365
  1752     0395  0826               	movf	blink@n,w
  1753     0396  022C               	subwf	??_blink,w
  1754     0397                     u1365:
  1755     0397  1803               	btfsc	3,0
  1756     0398  0008               	return
  1757                           
  1758                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1759                           ; Switch size 1, requested type "simple"
  1760                           ; Number of cases is 1, Range of values is 0 to 0
  1761                           ; switch strategies available:
  1762                           ; Name         Instructions Cycles
  1763                           ; simple_byte            4     3 (average)
  1764                           ; direct_byte           11     8 (fixed)
  1765                           ; jumptable            260     6 (fixed)
  1766                           ;	Chosen strategy is simple_byte
  1767     0399  082B               	movf	blink@port+1,w
  1768     039A  3A00               	xorlw	0	; case 0
  1769     039B  1903               	skipnz
  1770     039C  2B9E               	goto	l1634
  1771     039D  2B8A               	goto	l1506
  1772     039E                     l1634:
  1773                           
  1774                           ; Switch size 1, requested type "simple"
  1775                           ; Number of cases is 3, Range of values is 0 to 2
  1776                           ; switch strategies available:
  1777                           ; Name         Instructions Cycles
  1778                           ; simple_byte           10     6 (average)
  1779                           ; direct_byte           17     8 (fixed)
  1780                           ; jumptable            260     6 (fixed)
  1781                           ;	Chosen strategy is simple_byte
  1782     039E  082A               	movf	blink@port,w
  1783     039F  3A00               	xorlw	0	; case 0
  1784     03A0  1903               	skipnz
  1785     03A1  2B5E               	goto	l125
  1786     03A2  3A01               	xorlw	1	; case 1
  1787     03A3  1903               	skipnz
  1788     03A4  2B6A               	goto	l127
  1789     03A5  3A03               	xorlw	3	; case 2
  1790     03A6  1903               	skipnz
  1791     03A7  2B76               	goto	l128
  1792     03A8  2B8A               	goto	l1506
  1793     03A9  2B8A               	goto	l1506
  1794     03AA                     __end_of_blink:
  1795                           
  1796                           	psect	text7
  1797     03EF                     __ptext7:	
  1798 ;; *************** function _delay_ms *****************
  1799 ;; Defined at:
  1800 ;;		line 145 in file "main_v1_1.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  milliseconds    2    0[BANK0 ] unsigned int 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  j               2    4[BANK0 ] unsigned int 
  1805 ;;  i               2    2[BANK0 ] unsigned int 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2
  1810 ;; Tracked objects:
  1811 ;;		On entry : 300/0
  1812 ;;		On exit  : 300/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1815 ;;      Params:         0       2       0       0       0
  1816 ;;      Locals:         0       4       0       0       0
  1817 ;;      Temps:          0       0       0       0       0
  1818 ;;      Totals:         0       6       0       0       0
  1819 ;;Total ram usage:        6 bytes
  1820 ;; Hardware stack levels used: 1
  1821 ;; Hardware stack levels required when called: 2
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_blink
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829     03EF                     _delay_ms:	
  1830                           ;psect for function _delay_ms
  1831                           
  1832                           
  1833                           ;main_v1_1.c: 147: unsigned int i;;main_v1_1.c: 148: unsigned int j;;main_v1_1.c: 149: f
      +                          or (i = 0; i < milliseconds; i++)
  1834                           
  1835                           ;incstack = 0
  1836                           ; Regs used in _delay_ms: [wreg+status,2]
  1837     03EF  01A2               	clrf	delay_ms@i
  1838     03F0  01A3               	clrf	delay_ms@i+1
  1839     03F1                     l114:
  1840     03F1  0821               	movf	delay_ms@milliseconds+1,w
  1841     03F2  0223               	subwf	delay_ms@i+1,w
  1842     03F3  1D03               	skipz
  1843     03F4  2BF7               	goto	u1325
  1844     03F5  0820               	movf	delay_ms@milliseconds,w
  1845     03F6  0222               	subwf	delay_ms@i,w
  1846     03F7                     u1325:
  1847     03F7  1803               	btfsc	3,0
  1848     03F8  0008               	return
  1849                           
  1850                           ;main_v1_1.c: 150: {;main_v1_1.c: 151: for (j = 0; j < 500; j++)
  1851     03F9  01A4               	clrf	delay_ms@j
  1852     03FA  01A5               	clrf	delay_ms@j+1
  1853     03FB                     l1432:
  1854                           
  1855                           ;main_v1_1.c: 152: {
  1856     03FB  3001               	movlw	1
  1857     03FC  07A4               	addwf	delay_ms@j,f
  1858     03FD  1803               	skipnc
  1859     03FE  0AA5               	incf	delay_ms@j+1,f
  1860     03FF  3000               	movlw	0
  1861     0400  07A5               	addwf	delay_ms@j+1,f
  1862     0401  3001               	movlw	1
  1863     0402  0225               	subwf	delay_ms@j+1,w
  1864     0403  30F4               	movlw	244
  1865     0404  1903               	skipnz
  1866     0405  0224               	subwf	delay_ms@j,w
  1867     0406  1C03               	skipc
  1868     0407  2BFB               	goto	l1432
  1869     0408  3001               	movlw	1
  1870     0409  07A2               	addwf	delay_ms@i,f
  1871     040A  1803               	skipnc
  1872     040B  0AA3               	incf	delay_ms@i+1,f
  1873     040C  3000               	movlw	0
  1874     040D  07A3               	addwf	delay_ms@i+1,f
  1875     040E  2BF1               	goto	l114
  1876     040F                     __end_of_delay_ms:
  1877                           
  1878                           	psect	text8
  1879     03AA                     __ptext8:	
  1880 ;; *************** function _isr *****************
  1881 ;; Defined at:
  1882 ;;		line 32 in file "main_v1_1.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1896 ;;      Params:         0       0       0       0       0
  1897 ;;      Locals:         0       0       0       0       0
  1898 ;;      Temps:          3       0       0       0       0
  1899 ;;      Totals:         3       0       0       0       0
  1900 ;;Total ram usage:        3 bytes
  1901 ;; Hardware stack levels used: 1
  1902 ;; Hardware stack levels required when called: 1
  1903 ;; This function calls:
  1904 ;;		i1_display
  1905 ;; This function is called by:
  1906 ;;		Interrupt level 1
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910     03AA                     _isr:	
  1911                           ;psect for function _isr
  1912                           
  1913                           
  1914                           ;main_v1_1.c: 33: if (T0IF) {
  1915     03AA  1D0B               	btfss	11,2	;volatile
  1916     03AB  2BE6               	goto	i1l71
  1917                           
  1918                           ;main_v1_1.c: 34: T0IF = 0;
  1919     03AC  110B               	bcf	11,2	;volatile
  1920                           
  1921                           ;main_v1_1.c: 35: TMR0 = 61;
  1922     03AD  303D               	movlw	61
  1923     03AE  1283               	bcf	3,5	;RP0=0, select bank0
  1924     03AF  1303               	bcf	3,6	;RP1=0, select bank0
  1925     03B0  0081               	movwf	1	;volatile
  1926                           
  1927                           ;main_v1_1.c: 37: interrupt_count++;
  1928     03B1  3001               	movlw	1
  1929     03B2  07F7               	addwf	_interrupt_count,f
  1930     03B3  1803               	skipnc
  1931     03B4  0AF8               	incf	_interrupt_count+1,f
  1932     03B5  3000               	movlw	0
  1933     03B6  07F8               	addwf	_interrupt_count+1,f
  1934                           
  1935                           ;main_v1_1.c: 39: if (interrupt_count >= 38) {
  1936     03B7  3000               	movlw	0
  1937     03B8  0278               	subwf	_interrupt_count+1,w
  1938     03B9  3026               	movlw	38
  1939     03BA  1903               	skipnz
  1940     03BB  0277               	subwf	_interrupt_count,w
  1941     03BC  1C03               	skipc
  1942     03BD  2BE6               	goto	i1l71
  1943                           
  1944                           ;main_v1_1.c: 40: interrupt_count = 0;
  1945     03BE  01F7               	clrf	_interrupt_count
  1946     03BF  01F8               	clrf	_interrupt_count+1
  1947                           
  1948                           ;main_v1_1.c: 41: if (display_state) {
  1949     03C0  0879               	movf	_display_state,w
  1950     03C1  1903               	btfsc	3,2
  1951     03C2  2BCF               	goto	i1l1300
  1952                           
  1953                           ;main_v1_1.c: 42: display(11, 'C');
  1954     03C3  3043               	movlw	67
  1955     03C4  00F0               	movwf	i1display@port
  1956     03C5  300B               	movlw	11
  1957     03C6  120A  118A  223D  120A  118A  	fcall	i1_display
  1958                           
  1959                           ;main_v1_1.c: 43: display(11, 'D');
  1960     03CB  3044               	movlw	68
  1961     03CC  00F0               	movwf	i1display@port
  1962     03CD  300B               	movlw	11
  1963     03CE  2BDA               	goto	L8
  1964     03CF                     i1l1300:	
  1965                           ;main_v1_1.c: 44: } else {
  1966                           
  1967                           
  1968                           ;main_v1_1.c: 45: display(12, 'C');
  1969     03CF  3043               	movlw	67
  1970     03D0  00F0               	movwf	i1display@port
  1971     03D1  300C               	movlw	12
  1972     03D2  120A  118A  223D  120A  118A  	fcall	i1_display
  1973                           
  1974                           ;main_v1_1.c: 46: display(12, 'D');
  1975     03D7  3044               	movlw	68
  1976     03D8  00F0               	movwf	i1display@port
  1977     03D9  300C               	movlw	12
  1978     03DA                     L8:
  1979     03DA  120A  118A  223D  120A  118A  	fcall	i1_display
  1980                           
  1981                           ;main_v1_1.c: 47: };main_v1_1.c: 48: display_state = !display_state;
  1982     03DF  0879               	movf	_display_state,w
  1983     03E0  1D03               	btfss	3,2
  1984     03E1  2BE4               	goto	u116_20
  1985     03E2  3001               	movlw	1
  1986     03E3  2BE5               	goto	u117_20
  1987     03E4                     u116_20:
  1988     03E4  3000               	movlw	0
  1989     03E5                     u117_20:
  1990     03E5  00F9               	movwf	_display_state
  1991     03E6                     i1l71:
  1992     03E6  0876               	movf	??_isr+2,w
  1993     03E7  008A               	movwf	10
  1994     03E8  0875               	movf	??_isr+1,w
  1995     03E9  0084               	movwf	4
  1996     03EA  0E74               	swapf	??_isr,w
  1997     03EB  0083               	movwf	3
  1998     03EC  0EFE               	swapf	126,f
  1999     03ED  0E7E               	swapf	126,w
  2000     03EE  0009               	retfie
  2001     03EF                     __end_of_isr:
  2002                           
  2003                           	psect	intentry
  2004     0004                     __pintentry:	
  2005                           ;incstack = 0
  2006                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2007                           
  2008     0004                     interrupt_function:
  2009     007E                     saved_w	set	btemp
  2010     0004  00FE               	movwf	btemp
  2011     0005  0E03               	swapf	3,w
  2012     0006  00F4               	movwf	??_isr
  2013     0007  0804               	movf	4,w
  2014     0008  00F5               	movwf	??_isr+1
  2015     0009  080A               	movf	10,w
  2016     000A  00F6               	movwf	??_isr+2
  2017     000B  120A  118A  2BAA   	ljmp	_isr
  2018                           
  2019                           	psect	text9
  2020     023D                     __ptext9:	
  2021 ;; *************** function i1_display *****************
  2022 ;; Defined at:
  2023 ;;		line 228 in file "main_v1_1.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  num             1    wreg     unsigned char 
  2026 ;;  port            1    0[COMMON] unsigned char 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  num             1    1[COMMON] unsigned char 
  2029 ;;  PORT            2    2[COMMON] PTR volatile unsigned ch
  2030 ;;		 -> PORTD(1), PORTC(1), PORTB(1), 
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  1    wreg      void 
  2033 ;; Registers used:
  2034 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2040 ;;      Params:         1       0       0       0       0
  2041 ;;      Locals:         3       0       0       0       0
  2042 ;;      Temps:          0       0       0       0       0
  2043 ;;      Totals:         4       0       0       0       0
  2044 ;;Total ram usage:        4 bytes
  2045 ;; Hardware stack levels used: 1
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		_isr
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053     023D                     i1_display:	
  2054                           ;psect for function i1_display
  2055                           
  2056                           
  2057                           ;incstack = 0
  2058                           ; Regs used in i1_display: [wreg-fsr0h+status,2+status,0]
  2059                           ;i1display@num stored from wreg
  2060     023D  00F1               	movwf	i1display@num
  2061                           
  2062                           ;main_v1_1.c: 229: volatile unsigned char *PORT;;main_v1_1.c: 232: if (port == 'B') {
  2063     023E  3042               	movlw	66
  2064     023F  0670               	xorwf	i1display@port,w
  2065     0240  1D03               	btfss	3,2
  2066     0241  2A46               	goto	i1l1250
  2067                           
  2068                           ;main_v1_1.c: 233: PORT = &PORTB;
  2069     0242  3000               	movlw	0
  2070     0243  00F3               	movwf	i1display@PORT+1
  2071     0244  3006               	movlw	6
  2072     0245  2A55               	goto	L10
  2073     0246                     i1l1250:	
  2074                           ;main_v1_1.c: 234: } else if (port == 'C') {
  2075                           
  2076     0246  3043               	movlw	67
  2077     0247  0670               	xorwf	i1display@port,w
  2078     0248  1D03               	btfss	3,2
  2079     0249  2A4E               	goto	i1l1254
  2080                           
  2081                           ;main_v1_1.c: 235: PORT = &PORTC;
  2082     024A  3000               	movlw	0
  2083     024B  00F3               	movwf	i1display@PORT+1
  2084     024C  3007               	movlw	7
  2085     024D  2A55               	goto	L10
  2086     024E                     i1l1254:	
  2087                           ;main_v1_1.c: 236: } else if (port == 'D') {
  2088                           
  2089     024E  3044               	movlw	68
  2090     024F  0670               	xorwf	i1display@port,w
  2091     0250  1D03               	btfss	3,2
  2092     0251  0008               	return
  2093                           
  2094                           ;main_v1_1.c: 237: PORT = &PORTD;
  2095     0252  3000               	movlw	0
  2096     0253  00F3               	movwf	i1display@PORT+1
  2097     0254  3008               	movlw	8
  2098     0255                     L10:
  2099     0255  00F2               	movwf	i1display@PORT
  2100                           
  2101                           ;main_v1_1.c: 238: } else {
  2102     0256  2ABE               	goto	i1l1286
  2103     0257                     i1l1258:
  2104                           
  2105                           ;main_v1_1.c: 244: *PORT = 0x3F;
  2106     0257  0872               	movf	i1display@PORT,w
  2107     0258  0084               	movwf	4
  2108     0259  1783               	bsf	3,7
  2109     025A  1C73               	btfss	i1display@PORT+1,0
  2110     025B  1383               	bcf	3,7
  2111     025C  303F               	movlw	63
  2112     025D  0080               	movwf	0
  2113                           
  2114                           ;main_v1_1.c: 245: break;
  2115     025E  0008               	return
  2116     025F                     i1l1260:
  2117                           
  2118                           ;main_v1_1.c: 247: *PORT = 0x06;
  2119     025F  0872               	movf	i1display@PORT,w
  2120     0260  0084               	movwf	4
  2121     0261  1783               	bsf	3,7
  2122     0262  1C73               	btfss	i1display@PORT+1,0
  2123     0263  1383               	bcf	3,7
  2124     0264  3006               	movlw	6
  2125     0265  0080               	movwf	0
  2126                           
  2127                           ;main_v1_1.c: 248: break;
  2128     0266  0008               	return
  2129     0267                     i1l1262:
  2130                           
  2131                           ;main_v1_1.c: 250: *PORT = 0x5B;
  2132     0267  0872               	movf	i1display@PORT,w
  2133     0268  0084               	movwf	4
  2134     0269  1783               	bsf	3,7
  2135     026A  1C73               	btfss	i1display@PORT+1,0
  2136     026B  1383               	bcf	3,7
  2137     026C  305B               	movlw	91
  2138     026D  0080               	movwf	0
  2139                           
  2140                           ;main_v1_1.c: 251: break;
  2141     026E  0008               	return
  2142     026F                     i1l1264:
  2143                           
  2144                           ;main_v1_1.c: 253: *PORT = 0x4F;
  2145     026F  0872               	movf	i1display@PORT,w
  2146     0270  0084               	movwf	4
  2147     0271  1783               	bsf	3,7
  2148     0272  1C73               	btfss	i1display@PORT+1,0
  2149     0273  1383               	bcf	3,7
  2150     0274  304F               	movlw	79
  2151     0275  0080               	movwf	0
  2152                           
  2153                           ;main_v1_1.c: 254: break;
  2154     0276  0008               	return
  2155     0277                     i1l1266:
  2156                           
  2157                           ;main_v1_1.c: 256: *PORT = 0x66;
  2158     0277  0872               	movf	i1display@PORT,w
  2159     0278  0084               	movwf	4
  2160     0279  1783               	bsf	3,7
  2161     027A  1C73               	btfss	i1display@PORT+1,0
  2162     027B  1383               	bcf	3,7
  2163     027C  3066               	movlw	102
  2164     027D  0080               	movwf	0
  2165                           
  2166                           ;main_v1_1.c: 257: break;
  2167     027E  0008               	return
  2168     027F                     i1l1268:
  2169                           
  2170                           ;main_v1_1.c: 259: *PORT = 0x6D;
  2171     027F  0872               	movf	i1display@PORT,w
  2172     0280  0084               	movwf	4
  2173     0281  1783               	bsf	3,7
  2174     0282  1C73               	btfss	i1display@PORT+1,0
  2175     0283  1383               	bcf	3,7
  2176     0284  306D               	movlw	109
  2177     0285  0080               	movwf	0
  2178                           
  2179                           ;main_v1_1.c: 260: break;
  2180     0286  0008               	return
  2181     0287                     i1l1270:
  2182                           
  2183                           ;main_v1_1.c: 262: *PORT = 0x7D;
  2184     0287  0872               	movf	i1display@PORT,w
  2185     0288  0084               	movwf	4
  2186     0289  1783               	bsf	3,7
  2187     028A  1C73               	btfss	i1display@PORT+1,0
  2188     028B  1383               	bcf	3,7
  2189     028C  307D               	movlw	125
  2190     028D  0080               	movwf	0
  2191                           
  2192                           ;main_v1_1.c: 263: break;
  2193     028E  0008               	return
  2194     028F                     i1l1272:
  2195                           
  2196                           ;main_v1_1.c: 265: *PORT = 0x07;
  2197     028F  0872               	movf	i1display@PORT,w
  2198     0290  0084               	movwf	4
  2199     0291  1783               	bsf	3,7
  2200     0292  1C73               	btfss	i1display@PORT+1,0
  2201     0293  1383               	bcf	3,7
  2202     0294  3007               	movlw	7
  2203     0295  0080               	movwf	0
  2204                           
  2205                           ;main_v1_1.c: 266: break;
  2206     0296  0008               	return
  2207     0297                     i1l1274:
  2208                           
  2209                           ;main_v1_1.c: 268: *PORT = 0x7F;
  2210     0297  0872               	movf	i1display@PORT,w
  2211     0298  0084               	movwf	4
  2212     0299  1783               	bsf	3,7
  2213     029A  1C73               	btfss	i1display@PORT+1,0
  2214     029B  1383               	bcf	3,7
  2215     029C  307F               	movlw	127
  2216     029D  0080               	movwf	0
  2217                           
  2218                           ;main_v1_1.c: 269: break;
  2219     029E  0008               	return
  2220     029F                     i1l1276:
  2221                           
  2222                           ;main_v1_1.c: 271: *PORT = 0x6F;
  2223     029F  0872               	movf	i1display@PORT,w
  2224     02A0  0084               	movwf	4
  2225     02A1  1783               	bsf	3,7
  2226     02A2  1C73               	btfss	i1display@PORT+1,0
  2227     02A3  1383               	bcf	3,7
  2228     02A4  306F               	movlw	111
  2229     02A5  0080               	movwf	0
  2230                           
  2231                           ;main_v1_1.c: 272: break;
  2232     02A6  0008               	return
  2233     02A7                     i1l1278:
  2234                           
  2235                           ;main_v1_1.c: 274: *PORT = 0x40;
  2236     02A7  0872               	movf	i1display@PORT,w
  2237     02A8  0084               	movwf	4
  2238     02A9  1783               	bsf	3,7
  2239     02AA  1C73               	btfss	i1display@PORT+1,0
  2240     02AB  1383               	bcf	3,7
  2241     02AC  3040               	movlw	64
  2242     02AD  0080               	movwf	0
  2243                           
  2244                           ;main_v1_1.c: 275: break;
  2245     02AE  0008               	return
  2246     02AF                     i1l1280:
  2247                           
  2248                           ;main_v1_1.c: 277: *PORT = 0x08;
  2249     02AF  0872               	movf	i1display@PORT,w
  2250     02B0  0084               	movwf	4
  2251     02B1  1783               	bsf	3,7
  2252     02B2  1C73               	btfss	i1display@PORT+1,0
  2253     02B3  1383               	bcf	3,7
  2254     02B4  3008               	movlw	8
  2255     02B5  0080               	movwf	0
  2256                           
  2257                           ;main_v1_1.c: 278: break;
  2258     02B6  0008               	return
  2259     02B7                     i1l1282:
  2260                           
  2261                           ;main_v1_1.c: 280: *PORT = 0x00;
  2262     02B7  0872               	movf	i1display@PORT,w
  2263     02B8  0084               	movwf	4
  2264     02B9  1783               	bsf	3,7
  2265     02BA  1C73               	btfss	i1display@PORT+1,0
  2266     02BB  1383               	bcf	3,7
  2267     02BC  0180               	clrf	0
  2268                           
  2269                           ;main_v1_1.c: 281: break;
  2270     02BD  0008               	return
  2271     02BE                     i1l1286:
  2272     02BE  0871               	movf	i1display@num,w
  2273                           
  2274                           ; Switch size 1, requested type "simple"
  2275                           ; Number of cases is 13, Range of values is 0 to 12
  2276                           ; switch strategies available:
  2277                           ; Name         Instructions Cycles
  2278                           ; simple_byte           40    21 (average)
  2279                           ; direct_byte           47     8 (fixed)
  2280                           ; jumptable            260     6 (fixed)
  2281                           ;	Chosen strategy is simple_byte
  2282     02BF  3A00               	xorlw	0	; case 0
  2283     02C0  1903               	skipnz
  2284     02C1  2A57               	goto	i1l1258
  2285     02C2  3A01               	xorlw	1	; case 1
  2286     02C3  1903               	skipnz
  2287     02C4  2A5F               	goto	i1l1260
  2288     02C5  3A03               	xorlw	3	; case 2
  2289     02C6  1903               	skipnz
  2290     02C7  2A67               	goto	i1l1262
  2291     02C8  3A01               	xorlw	1	; case 3
  2292     02C9  1903               	skipnz
  2293     02CA  2A6F               	goto	i1l1264
  2294     02CB  3A07               	xorlw	7	; case 4
  2295     02CC  1903               	skipnz
  2296     02CD  2A77               	goto	i1l1266
  2297     02CE  3A01               	xorlw	1	; case 5
  2298     02CF  1903               	skipnz
  2299     02D0  2A7F               	goto	i1l1268
  2300     02D1  3A03               	xorlw	3	; case 6
  2301     02D2  1903               	skipnz
  2302     02D3  2A87               	goto	i1l1270
  2303     02D4  3A01               	xorlw	1	; case 7
  2304     02D5  1903               	skipnz
  2305     02D6  2A8F               	goto	i1l1272
  2306     02D7  3A0F               	xorlw	15	; case 8
  2307     02D8  1903               	skipnz
  2308     02D9  2A97               	goto	i1l1274
  2309     02DA  3A01               	xorlw	1	; case 9
  2310     02DB  1903               	skipnz
  2311     02DC  2A9F               	goto	i1l1276
  2312     02DD  3A03               	xorlw	3	; case 10
  2313     02DE  1903               	skipnz
  2314     02DF  2AA7               	goto	i1l1278
  2315     02E0  3A01               	xorlw	1	; case 11
  2316     02E1  1903               	skipnz
  2317     02E2  2AAF               	goto	i1l1280
  2318     02E3  3A07               	xorlw	7	; case 12
  2319     02E4  1903               	skipnz
  2320     02E5  2AB7               	goto	i1l1282
  2321     02E6  2AE7               	goto	i1l175
  2322     02E7                     i1l175:
  2323     02E7  0008               	return
  2324     02E8                     __end_ofi1_display:
  2325     007E                     btemp	set	126	;btemp
  2326     007E                     wtemp0	set	126
  2327                           
  2328                           	psect	config
  2329                           
  2330                           ;Config register CONFIG @ 0x2007
  2331                           ;	Oscillator Selection bits
  2332                           ;	FOSC = HS, HS oscillator
  2333                           ;	Watchdog Timer Enable bit
  2334                           ;	WDTE = OFF, WDT disabled
  2335                           ;	Power-up Timer Enable bit
  2336                           ;	PWRTE = 0x1, unprogrammed default
  2337                           ;	Brown-out Reset Enable bit
  2338                           ;	BOREN = 0x1, unprogrammed default
  2339                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2340                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2341                           ;	Data EEPROM Memory Code Protection bit
  2342                           ;	CPD = 0x1, unprogrammed default
  2343                           ;	Flash Program Memory Write Enable bits
  2344                           ;	WRT = 0x3, unprogrammed default
  2345                           ;	In-Circuit Debugger Mode bit
  2346                           ;	DEBUG = 0x1, unprogrammed default
  2347                           ;	Flash Program Memory Code Protection bit
  2348                           ;	CP = 0x1, unprogrammed default
  2349     2007                     	org	8199
  2350     2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     23      41
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display@PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), PORTC(SFR0[1]), PORTD(SFR0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_display

Critical Paths under _main in BANK0

    _main->_blink
    _key->___bmul
    _blink->_delay_ms

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    5128
                                             15 BANK0      8     8      0
                              _blink
                            _display
                                _key
                            _keyinit
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keyinit                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _key                                                  1     1      0     118
                                              4 BANK0      1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     118
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _display                                              4     3      1    1566
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _blink                                                9     3      6    1981
                                              6 BANK0      9     3      6
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             6     4      2     526
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0     481
                                              4 COMMON     3     3      0
                          i1_display
 ---------------------------------------------------------------------------------
 (4) i1_display                                            4     3      1     481
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _blink
     _delay_ms
   _display
   _key
     ___bmul
   _keyinit
   _timer0_init

 _isr (ROOT)
   i1_display

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     17      29       5       51.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      33      12        0.0%
ABS                  0      0      33       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Sep 23 22:12:54 2024

                      pc 0002           ___bmul@product 0022                       l83 005E  
                     l86 0070                       fsr 0004                      l114 03F1  
                    l125 035E                      l141 0327                      l150 031D  
                    l142 02EF                      l127 036A                      l143 030A  
                    l128 0376                      l160 0342                      l136 02E9  
                    l146 032C                      l163 0349                      l147 0314  
                    l156 0333                      l149 0311                      l158 033B  
                    l175 023C                      _GIE 005F                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                      _RB3 0033  
                    _RB4 0034                      _RB5 0035                      _RB6 0036  
                    u760 02F7                      u770 0300                      u774 02FA  
                    u784 0303                      _key 02E8                      _isr 03AA  
                    fsr0 0004                      indf 0000                     l1092 0428  
                   l1182 0324                     l1166 0308                     l1432 03FB  
                   l1440 019B                     l1088 0422                     l1176 031B  
                   l1520 003D                     l1506 038A                     l1450 01B4  
                   l1508 038E                     l1460 01DC                     l1452 01BC  
                   l1444 01A3                     l1470 0204                     l1462 01E4  
                   l1454 01C4                     l1550 00B7                     l1472 020C  
                   l1464 01EC                     l1456 01CC                     l1448 01AC  
                   l1608 017E                     l1544 0090                     l1528 0053  
                   l1634 039E                     l1466 01F4                     l1458 01D4  
                   l1468 01FC                     l1476 0213                     l1580 0124  
                   l1564 00F1                     l1556 00BF                     l1594 0143  
                   l1586 0104                     l1588 013B                     ?_key 0070  
                   ?_isr 0070              display@PORT 0022                     _T0IE 005D  
                   _T0IF 005A                     u1325 03F7                     u1365 0397  
                   _PEIE 005E                     i1l71 03E6                     _TMR0 0001  
            display@port 0020                     _main 002F                     btemp 007E  
                   start 000E        ___bmul@multiplier 0023                    ??_key 0024  
                  ??_isr 0074                    ?_main 0070                    i1l175 02E7  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088          __end_of_display 023D                    _blink 035C  
           main@password 0031          __end_of_keyinit 0450                    main@i 0035  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 0192                   ??_main 002F  
                 ?_blink 0026                   i1l1300 03CF                   i1l1250 0246  
                 i1l1260 025F                   i1l1270 0287                   i1l1262 0267  
                 i1l1254 024E                   i1l1280 02AF                   i1l1272 028F  
                 i1l1264 026F                   i1l1282 02B7                   i1l1274 0297  
                 i1l1266 0277                   i1l1258 0257                   i1l1276 029F  
                 i1l1268 027F                   i1l1278 02A7                   i1l1286 02BE  
                 u116_20 03E4                   u117_20 03E5         __end_of_delay_ms 040F  
   delay_ms@milliseconds 0020                   ___bmul 0420             ?_timer0_init 0070  
                 _colloc 0047                   _keypad 0037                   blink@n 0026  
                 blink@t 002E                   _rowloc 0048                ??_display 0021  
           __pdataCOMMON 0079                ??_keyinit 0020                   saved_w 007E  
      __end_ofi1_display 02E8  __end_of__initialization 002B      ___bmul@multiplicand 0020  
         __pcstackCOMMON 0070             __pidataBANK0 0431            __end_of_blink 03AA  
           i1display@num 0071                  ??_blink 002C               __pbssBANK0 0043  
             __pmaintext 002F                  ?___bmul 0020               __pintentry 0004  
       main@confirmation 0030                ?_delay_ms 0020                  __ptext1 043D  
                __ptext2 0447                  __ptext3 02E8                  __ptext4 0420  
                __ptext5 0192                  __ptext6 035C                  __ptext7 03EF  
                __ptext8 03AA                  __ptext9 023D                  _display 0192  
                _keyinit 0447               ??_delay_ms 0022     end_of_initialization 002B  
              _PORTAbits 0005                i1_display 023D               display@num 0021  
        blink@v_delay_ms 0028           __end_of___bmul 0431            __pidataCOMMON 0450  
    start_initialization 0011              __end_of_key 035C              __end_of_isr 03EF  
          i1display@PORT 0072               ?i1_display 0070            i1display@port 0070  
       main@new_password 0033                 ??___bmul 0021               init_fetch0 040F  
            __pdataBANK0 0037              __pbssCOMMON 0077                ___latbits 0002  
          __pcstackBANK0 0020                 ?_display 0020                 ?_keyinit 0070  
            ??i1_display 0071        interrupt_function 0004                delay_ms@i 0022  
              delay_ms@j 0024                blink@port 002A            ??_timer0_init 0020  
              main@i_112 0036      __end_of_timer0_init 0447                 _delay_ms 03EF  
               main@F902 0045                 main@F904 0043                 init_ram0 0413  
               intlevel1 0000          _interrupt_count 0077              _timer0_init 043D  
             _OPTION_REG 0081            _display_state 0079  
